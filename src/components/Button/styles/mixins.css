/**
 * 1. Put a border on the filled button so it can
 *    share all size and padding with the outline
 *    button.
 *
 * 2. Try to make the specificity as low as possible
 *    so it's easier to override without !important.
 */
@define-mixin createFilledButton {
  background-color: var(--button-primary-color);
  border: 1px solid var(--button-primary-color); /* [1] */
  color: var(--button-inverse-color);
  position: relative;

  &:after /*[2]*/ {
    border-radius: inherit;
    box-shadow: 0 0 0 0 transparent;
    content: '';
    height: 100%;
    left: 0;
    opacity: 0.3;
    position: absolute;
    top: 0;
    transition: box-shadow 150ms ease;
    width: 100%;
  }

  &:not(:disabled):not(.is-disabled) {
    &:focus,
    &.is-focused {
      &:after {
        box-shadow: 0 0 0 4px var(--button-primary-color);
      }
    }

    &:hover,
    &.is-hovered {
      opacity: .8;
    }

    &:active,
    &.is-active {
      background-color: var(--button-active-primary-color);
      border-color: var(--button-active-primary-color);
      opacity: 1;
    }
  }
}

/**
 * 1. Try to make the specificity as low as possible
 *    so it's easier to override without !important.
 */
@define-mixin createOutlineButton {
  border: 1px solid var(--button-primary-color);
  color: var(--button-primary-color);
  position: relative;

  &:after /* [1] */ {
    border-radius: inherit;
    box-shadow: 0 0 0 0 transparent;
    content: '';
    height: 100%;
    opacity: 0.3;
    position: absolute;
    top: 0;
    left: 0;
    transition: box-shadow 150ms ease;
    width: 100%;
  }

  &:before /* [2] */ {
    background-color: transparent;
    border-radius: inherit;
    content: '';
    height: 100%;
    opacity: 0.1;
    position: absolute;
    top: 0;
    left: 0;
    transition: background-color 150ms ease;
    width: 100%;
  }

  &:not(:disabled):not(.is-disabled) {
    &:focus,
    &.is-focused {
      &:after {
        box-shadow: 0 0 0 4px var(--button-primary-color);
      }
    }

    &:hover,
    &.is-hovered {
      &:before {
        background-color: var(--button-primary-color);
      }
    }

    &:active,
    &.is-active {
      border-color: var(--button-active-primary-color);

      &:before {
        background-color: var(--button-primary-color);
      }
    }
  }
}

/**
 * 1. Put a border on the filled button so it can
 *    share all size and padding with the outline
 *    button.
 *
 * 2. Try to make the specificity as low as possible
 *    so it's easier to override without !important.
 *
 * 3. Set the hover background to overflow the
 *    transparent border so that the button looks
 *    like it's the same size as the others.
 */
@define-mixin createTextButton {
  border: 1px solid transparent; /* [1] */
  color: var(--button-primary-color);
  position: relative;

  &:after /* [2] */ {
    border-radius: inherit;
    bottom: 0;
    box-shadow: 0 0 0 0 transparent;
    content: '';
    left: 0;
    opacity: 0.3;
    position: absolute;
    right: 0;
    top: 0;
    transition: box-shadow 150ms ease;
  }

  &:before /* [2] */ {
    background-color: var(--button-primary-color);
    border-radius: inherit;
    bottom: -1px; /* [3] */
    content: '';
    left: -1px; /* [3] */
    opacity: 0;
    position: absolute;
    right: -1px; /* [3] */
    top: -1px; /* [3] */
    transition: opacity 150ms ease;
  }

  &:not(:disabled):not(.is-disabled) {
    &:focus,
    &.is-focused {
      &:after {
        box-shadow: 0 0 0 3px var(--button-primary-color);
      }
    }

    &:hover,
    &.is-hovered {
      &:before {
        opacity: 0.1;
      }
    }

    &:active,
    &.is-active {
      &:before {
        opacity: 0.1;
      }
    }
  }
}

@define-mixin createInlineButton {
  border-radius: 0;
  color: var(--button-primary-color);
  margin: 0;
  padding: 0;

  &:after {
    border-bottom: 1px solid transparent;
    content: '';
    height: 100%;
    position: absolute;
    top: 0.1rem;
    left: -0.1rem;
    right: -0.1rem;
    transition: border-color 150ms ease, transform 200ms ease;
    transform: scaleX(0);
  }

  &.button--icon {
    &:after {
      top: 4px;
    }
  }

  &:not(:disabled):not(.is-disabled) {
    &:hover,
    &.is-hovered {
      opacity: .8;
    }

    &:focus,
    &.is-focused {
      &:after {
        border-color: currentColor;
        transform: scaleX(1);
      }
    }

    &:active,
    &.is-active {
      color: var(--button-active-primary-color);
      opacity: 1;
    }
  }
}
